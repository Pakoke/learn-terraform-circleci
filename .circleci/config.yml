version: 2.1

parameters:
  image-tag:
    type: string
    default: "latest"
  workingdir:
    type: string
    default: "."
  aws-accountid:
    type: string
    default: ""
  aws-access-key:
    type: string
    default: $AWS_ACCESS_KEY_ID
  aws-secret-key:
    type: string
    default: $AWS_SECRET_ACCESS_KEY
  aws-region:
    type: string
    default: "eu-west-2"

orbs:
  orb-tools: circleci/orb-tools@10.0
  aws-ecr: circleci/aws-ecr@7.0.0

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    environment:
      IMAGETAG: "<< pipeline.parameters.image-tag >>"
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
            terraform plan -out tfapply -var-file variables.tfvars -var="region=<< pipeline.parameters.aws-region >>"
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  build-push-image:
    docker:
      - image: cimg/base
    steps:
      - attach_workspace:
          at: .
      - aws-ecr/build-and-push-image:
          account-url: "<< pipeline.parameters.aws-accountid >>.dkr.ecr.<< pipeline.parameters.aws-region >>.amazonaws.com"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          no-output-timeout: 20m
          path: ./apps/dotnetapi/src
          region: "<< pipeline.parameters.aws-region >>"
          repo: dotnetapi
          skip-when-tags-exist: false
          tag: 'latest'

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file variables.tfvars -var="region=<< pipeline.parameters.aws-region >>"
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy

workflows:
  version: 2.1
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - build-push-image
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy
